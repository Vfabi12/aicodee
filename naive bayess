import pandas as pd
import numpy as np

cars = [
    ("Red", "Sports", 'Domestic', "Yes"),
    ("Red", "Sports", 'Domestic', "No"),
    ("Red", "Sports", 'Domestic', "Yes"),
    ("Yellow", "Sports", 'Domestic', "No"),
    ("Yellow", "Sports", 'Imported', "No"),
    ("Yellow", "SUV", 'Imported', "No"),
    ("Yellow", "SUV", 'Imported', "Yes"),
    ("Yellow", "SUV", 'Domestic', "No"),
    ("Red", "SUV", 'Imported', "No"),
    ("Red", "Sports", 'Imported', "Yes")
]

df = pd.DataFrame(cars, columns=['Color', 'Type', 'Origin', 'Approval'])

class_probabilities = df['Approval'].value_counts(normalize=True)
conditional_probabilities = {}

for feature in df.columns[:-1]:
    conditional_probabilities[feature] = {}
    
    for value in df[feature].unique():
        conditional_probabilities[feature][value] = {}
        
        for label in df['Approval'].unique():
            subset = df[df[feature] == value]
            conditional_probabilities[feature][value][label] = len(subset[subset['Approval'] == label]) / len(df[df['Approval'] == label])

def predict(features):
    probabilities = {}
    for label in df['Approval'].unique():
        probabilities[label] = class_probabilities[label]
        for feature in features:
            probabilities[label] *= conditional_probabilities[feature][features[feature]][label]
    return max(probabilities, key=probabilities.get)

new_example = {'Color': 'Red', 'Type': 'SUV', 'Origin': 'Domestic'}
prediction = predict(new_example)

print("Class Probabilities:")
print(class_probabilities)
print("\nConditional Probabilities:")
for feature, values in conditional_probabilities.items():
    print(f"Feature: {feature}")
    for value, labels in values.items():
        print(f"  Value: {value}")
        for label, probability in labels.items():
            print(f"    P({feature} = {value} | {label}) = {probability:.4f}")

print("\nPrediction:", prediction)
